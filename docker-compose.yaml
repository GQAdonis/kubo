services:
  ipfs:
    build: .
    restart: unless-stopped
    volumes:
      - ipfs_path:/data/ipfs
      - ipfs_fuse:/ipfs
      - ipns_fuse:/ipns
    environment:
      - IPFS_PATH=/data/ipfs
      # Enable CORS for the API and Gateway
      - IPFS_PROFILE=server
      - IPFS_GATEWAY_WRITABLE=true
      # Configure CORS headers through environment variables
      - IPFS_API_CORS_ALLOWED_ORIGINS=["*"]
      - IPFS_API_CORS_ALLOWED_METHODS=["PUT", "POST", "GET"]
      - IPFS_GATEWAY_CORS_ALLOWED_ORIGINS=["*"]
      - IPFS_GATEWAY_CORS_ALLOWED_METHODS=["GET", "POST"]
    ports:
      # Swarm ports for peer discovery and data transfer
      - 4001:4001/tcp
      - 4001:4001/udp
      
      # API port (localhost only)
      # - 127.0.0.1:5001:5001
      
      # HTTP Gateway (localhost only)
      # - 127.0.0.1:8080:8080
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      
      # API service configuration - including WebUI
      - "traefik.http.routers.ipfs-api.rule=Host(`ipfs.prometheusags.ai`)"
      - "traefik.http.routers.ipfs-api.entrypoints=websecure"
      - "traefik.http.routers.ipfs-api.tls.certresolver=myresolver"
      - "traefik.http.services.ipfs-api.loadbalancer.server.port=5001"
      
      # Gateway service configuration
      - "traefik.http.routers.ipfs-gateway.rule=Host(`ipfs.prometheusags.ai`) && (PathPrefix(`/ipfs`) || PathPrefix(`/ipns`))"
      - "traefik.http.routers.ipfs-gateway.entrypoints=websecure"
      - "traefik.http.routers.ipfs-gateway.tls.certresolver=myresolver"
      - "traefik.http.services.ipfs-gateway.loadbalancer.server.port=8080"
      
      # HTTP to HTTPS redirect
      - "traefik.http.routers.ipfs-redirect.rule=Host(`ipfs.prometheusags.ai`)"
      - "traefik.http.routers.ipfs-redirect.entrypoints=web"
      - "traefik.http.routers.ipfs-redirect.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    networks:
      - traefik_network
    # Initialize IPFS repo before starting the daemon
    entrypoint: >
      /bin/sh -c "
        # Check if the repository exists, if not initialize it
        if [ ! -f /data/ipfs/config ]; then
          echo 'Initializing IPFS repository...'
          ipfs init --profile=server
          
          # Set default bootstrap nodes
          ipfs bootstrap add --default
        fi
        
        # Configure IPFS
        echo 'Configuring IPFS...'
        ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[\"*\"]'
        ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"PUT\", \"POST\", \"GET\"]'
        ipfs config --json API.HTTPHeaders.Access-Control-Allow-Headers '[\"Authorization\"]'
        ipfs config --json API.HTTPHeaders.Access-Control-Expose-Headers '[\"Location\"]'
        ipfs config --json API.HTTPHeaders.Access-Control-Allow-Credentials '[\"true\"]'
        ipfs config --json Addresses.Gateway '[\"/ip4/0.0.0.0/tcp/8080\"]'
        ipfs config --json Addresses.API '[\"/ip4/0.0.0.0/tcp/5001\"]'
        
        # WebUI and Gateway configuration
        ipfs config --json Gateway.PublicGateways '{\"/ip4/0.0.0.0/tcp/8080\": {\"Paths\": [\"/ipfs\", \"/ipns\"], \"UseSubdomains\": false}}'
        ipfs config --json Gateway.HTTPHeaders.Access-Control-Allow-Origin '[\"*\"]'
        ipfs config --json Gateway.HTTPHeaders.Access-Control-Allow-Methods '[\"GET\", \"POST\"]'
        ipfs config --json Gateway.HTTPHeaders.Access-Control-Allow-Headers '[\"X-Requested-With\", \"Range\", \"User-Agent\"]'
        
        # Important: Enable the WebUI by setting the API.HTTPHeaders correctly
        ipfs config --json API.HTTPHeaders.Access-Control-Allow-Headers '[\"X-Requested-With\", \"Range\", \"User-Agent\", \"Origin\", \"Accept\", \"Content-Type\", \"Authorization\"]'
        
        # Set up the correct WebUI path directly for new IPFS versions (Kubo)
        # Important: This is how we enable the WebUI in modern IPFS versions
        ipfs config --json API.HTTPHeaders.Access-Control-Expose-Headers '[\"Location\", \"Ipfs-Hash\"]'
        
        # Update the config to point the WebUI correctly
        ipfs config --json 'Gateway.RootRedirect' '\"/webui/\"'
        
        # Start the daemon with the WebUI enabled
        echo 'Starting IPFS daemon...'
        exec ipfs daemon --migrate=true --enable-namesys-pubsub
      "

networks:
  traefik_network:
    external: true  # This assumes your Traefik service is on an external network
volumes:
  ipfs_path:
  ipfs_fuse:
  ipns_fuse:
